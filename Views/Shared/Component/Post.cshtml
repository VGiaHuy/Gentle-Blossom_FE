@using System.Security.Claims
@using Gentle_Blossom_FE.Data.DTOs.UserDTOs
@model List<PostDTO>

@foreach (var post in Model)
{
    <div class="mb-4 border border-1 border-primary rounded-4 p-3" id="post-@post.PostId">
        <div class="d-flex align-items-center mb-3">
            <img src="/Post/ProxyImage?url=@(Uri.EscapeDataString(post.PosterAvatar.AvatarUrl))" alt="Avatar" class="rounded-circle me-3" loading="lazy" style="width: 50px; height: 50px;">
            <div class="flex-grow-1">
                @if (!string.IsNullOrEmpty(post.AcademicTitle))
                {
                    <strong class="d-block accademictitle" style="color: #198754;">@post.AcademicTitle</strong>
                }
                <strong class="d-block text-primary fw-bold" style="color: #0dcaf0;">@post.PosterName</strong>
                <p class="text-muted mb-0 small">@post.CreatedDate</p>
            </div>
            @if (User.Identity!.IsAuthenticated && (post.PosterId) == int.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value!))
            {
                <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm rounded-circle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-three-dots"></i>
                    </button>
                    <ul class="dropdown-menu rounded-3">
                        <li>
                            <a class="dropdown-item" href="#" onclick='editPost(@Html.Raw(Json.Serialize(post)))'>
                                <i class="bi bi-pencil-square me-2"></i>Sửa bài viết
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#" onclick="deletePost(@post.PostId)">
                                <i class="bi bi-trash me-2"></i>Xóa bài viết
                            </a>
                        </li>
                    </ul>

                </div>
            }
        </div>
        <div class="text-muted mb-3">@Html.Raw(post.Content)</div>
        @if (post.MediaList != null && post.MediaList.Any())
        {
            <div class="media-gallery row g-2 mb-3">
                @foreach (var media in post.MediaList)
                {
                    @if (!string.IsNullOrEmpty(media.MediaUrl))
                    {
                        <div class="col-6 col-md-4">
                            @if (string.Equals(media.MediaType, "Image", StringComparison.OrdinalIgnoreCase))
                            {
                                if (Uri.TryCreate(media.MediaUrl, UriKind.Absolute, out var uriResult) &&
                                (uriResult.Scheme == Uri.UriSchemeHttp || uriResult.Scheme == Uri.UriSchemeHttps))
                                {
                                    <img src="/Post/ProxyImage?url=@(Uri.EscapeDataString(media.MediaUrl))"
                                         alt="@media.FileName"
                                         class="img-fluid rounded"
                                         style="max-height: 200px; object-fit: cover;"
                                         loading="lazy"
                                         onerror="this.onerror=null; this.src='/images/fallback-image.jpg';" />
                                }
                                else
                                {
                                    <img src="/images/fallback-image.jpg"
                                         alt="@media.FileName"
                                         class="img-fluid rounded"
                                         style="max-height: 200px; object-fit: cover;"
                                         data-src="invalid-url" />
                                }
                            }
                            else if (string.Equals(media.MediaType, "Video", StringComparison.OrdinalIgnoreCase))
                            {
                                <iframe src="https://drive.google.com/file/d/@(ExtractFileId(media.MediaUrl))/preview?t=@(DateTime.Now.Ticks)"
                                        class="img-fluid rounded"
                                        style="max-height: 200px; width: 100%; border: 1px solid #dee2e6;"
                                        allowfullscreen>
                                </iframe>
                            }
                        </div>
                    }
                }
            </div>
        }
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="d-flex gap-2 align-items-center">
                <i class="bi bi-heart-fill text-danger"></i>
                <span class="text-muted small" id="post-like-count-@post.PostId">@post.NumberOfLike lượt thích</span>
            </div>
            <div class="d-flex gap-2 align-items-center">
                <span class="text-muted small comment-count">@post.NumberOfComment bình luận</span>
                <span class="text-muted small share-count">0 lượt chia sẻ</span>
            </div>
        </div>
        @if(!User.Identity.IsAuthenticated)
        {
            <div class="d-flex gap-2 border-top pt-3 mb-3">
                <button class="btn btn-sm rounded-3 flex-fill btn-outline-soft like-button"
                        style="--btn-color: #dc3545; --btn-hover: #f8d7da;">
                    <i class="bi bi-heart me-1"></i> Thích
                </button>
                <button class="btn btn-sm rounded-3 flex-fill btn-outline-soft comment-button"
                        style="--btn-color: #0dcaf0; --btn-hover: #e0f7fb;"
                        data-post-id="@post.PostId">
                    <i class="bi bi-chat-text me-1"></i> Bình luận
                </button>
                <button class="btn btn-sm rounded-3 flex-fill btn-outline-soft"
                        style="--btn-color: #198754; --btn-hover: #d1e7dd;">
                    <i class="bi bi-share me-1"></i> Chia sẻ
                </button>
            </div>
        }
        else
        {
            <div class="d-flex gap-2 border-top pt-3 mb-3">
                <button class="btn btn-sm rounded-3 flex-fill btn-outline-soft like-button"
                        data-post-id="@post.PostId" data-liked="@post.Liked.ToString().ToLower()"
                        style="--btn-color: #dc3545; --btn-hover: #f8d7da;"
                        onclick="toggleLike(this, 'post', @post.PostId)">
                    <i class="bi bi-heart me-1"></i> Thích
                </button>
                <button class="btn btn-sm rounded-3 flex-fill btn-outline-soft comment-button"
                        style="--btn-color: #0dcaf0; --btn-hover: #e0f7fb;"
                        data-post-id="@post.PostId">
                    <i class="bi bi-chat-text me-1"></i> Bình luận
                </button>
                <button class="btn btn-sm rounded-3 flex-fill btn-outline-soft"
                        style="--btn-color: #198754; --btn-hover: #d1e7dd;"
                        onclick="sharePost()">
                    <i class="bi bi-share me-1"></i> Chia sẻ
                </button>
            </div>
        }
    </div>
}

@functions {
    string ExtractFileId(string url)
    {
        var match = System.Text.RegularExpressions.Regex.Match(url, @"id=([\w-]+)");
        return match.Success ? match.Groups[1].Value : url;
    }
}