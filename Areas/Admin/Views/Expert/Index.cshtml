<div class="container">
    <h2 class="mt-4 mb-4">Danh sách chuyên gia</h2>
    <button class="btn btn-success mb-3" onclick="importExcel()">Import từ Excel</button>

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th style="width: 5%;">ID</th>
                    <th style="width: 20%;">Họ và tên</th>
                    <th style="width: 10%;">Giới tính</th>
                    <th style="width: 15%;">Học vị</th>
                    <th style="width: 15%;">Chức vụ</th>
                    <th style="width: 15%;">Chuyên môn</th>
                    <th style="width: 20%;">Đơn vị công tác</th>
                    <th style="width: 10%; white-space: nowrap;">Thao tác</th>
                </tr>
            </thead>
            <tbody id="expertTableBody"></tbody>
        </table>
    </div>

    <nav>
        <ul class="pagination" id="pagination"></ul>
    </nav>
</div>

@section scripts {
    <script>
        let currentPage = 1;
        const pageSize = 10;
        let expertsData = [];

        // Tải danh sách chuyên gia
        function loadExperts(page = 1) {
            currentPage = page;
            $.ajax({
                url: '@Url.Action("GetExperts", "Expert")',
                type: 'GET',
                data: { page: page, pageSize: pageSize },
                success: function (response) {
                    console.log(response);
                    if (response.success) {
                        expertsData = response.data.experts; // Lưu dữ liệu chuyên gia
                        renderTable(expertsData);
                        renderPagination(Math.ceil(response.data.totalCount / pageSize), page);
                    } else {
                        showErrorModal('Lỗi: ' + response.message);
                    }
                },
                error: function () {
                    showErrorModal('Lỗi khi tải danh sách chuyên gia.');
                }
            });
        }

        // Hiển thị bảng chuyên gia
        function renderTable(experts) {
            console.log(experts);
            const tbody = $('#expertTableBody');
            tbody.empty();
            experts.forEach(expert => {
                const row = `
                            <tr>
                                <td>${expert.expertId}</td>
                                <td>${expert.fullName || 'N/A'}</td>
                                <td>${expert.gender ? 'Nam' : 'Nữ'}</td>
                                <td>${expert.academicTitle || 'N/A'}</td>
                                <td>${expert.position || 'N/A'}</td>
                                <td>${expert.specialization || 'N/A'}</td>
                                <td>${expert.organization || 'N/A'}</td>
                                <td>
                                    <button class="btn btn-sm btn-danger" onclick="deleteExpert(${expert.expertId})">Xóa</button>
                                </td>
                            </tr>
                        `;
                tbody.append(row);
            });
        }

        // Hiển thị phân trang
        function renderPagination(totalPages, currentPage) {
            const pagination = $('#pagination');
            pagination.empty();

            const maxVisiblePages = 10;

            // Tính toán startPage và endPage để hiển thị trong nhóm 10
            let startPage = Math.floor((currentPage - 1) / maxVisiblePages) * maxVisiblePages + 1;
            let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);

            // Nút « (quay lại nhóm trước)
            if (startPage > 1) {
                pagination.prepend(`
                            <li class="page-item">
                                <a class="page-link" href="#" onclick="renderPagination(${totalPages}, ${startPage - 1})">«</a>
                            </li>`);
            }

            // Tạo các số trang trong nhóm
            for (let i = startPage; i <= endPage; i++) {
                const li = `
                            <li class="page-item ${i === currentPage ? 'active' : ''}">
                                <a class="page-link" href="#" onclick="loadExperts(${i})">${i}</a>
                            </li>`;
                pagination.append(li);
            }

            // Nút » (chuyển sang nhóm sau)
            if (endPage < totalPages) {
                pagination.append(`
                            <li class="page-item">
                                <a class="page-link" href="#" onclick="renderPagination(${totalPages}, ${endPage + 1})">»</a>
                            </li>`);
            }
        }

        // Xóa chuyên gia
        function deleteExpert(id) {
            if (confirm('Bạn có chắc muốn xóa chuyên gia này?')) {
                $.ajax({
                    url: '@Url.Action("DeleteExpert", "Expert")',
                    type: 'DELETE',
                    data: { expertId: id },
                    success: function (response) {
                        if (response.success) {
                            loadExperts(currentPage);
                            showSuccessModal(response.message);
                        } else {
                            showErrorModal('Lỗi: ' + response.message);
                        }
                    },
                    error: function () {
                        showErrorModal('Lỗi khi xóa chuyên gia.');
                    }
                });
            }
        }

        // Import từ Excel
        function importExcel() {
            // Mở modal hoặc xử lý upload file Excel
            const input = document.createElement('input');
            input.type = 'file';
            input.accept = '.xlsx, .xls';
            input.onchange = function (event) {
                const file = event.target.files[0];
                if (file) {
                    const formData = new FormData();
                    formData.append('file', file);
                    $.ajax({
                        url: '@Url.Action("ImportExpertsFromExcel", "Expert")',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            if (response.success) {
                                loadExperts(currentPage);
                                showSuccessModal('Import chuyên gia thành công!');
                            } else {
                                showErrorModal('Lỗi: ' + response.message);
                            }
                        },
                        error: function () {
                            showErrorModal('Lỗi khi import file Excel.');
                        }
                    });
                }
            };
            input.click();
        }

        // Tải danh sách khi trang được load
        $(document).ready(function () {
            loadExperts(1);
        });
    </script>
}